#
#   Copyright 2019  SenX S.A.S.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

{
    'desc' 'Apply a sliding Z-score test. Outputs a boolean GTS with anomalous ticks flagged as true.'
    'sig' [ 
      [ [ 'steps:LONG' 'occ:LONG' 'post:LONG' 'pre:LONG' 'gts:GTS' ]  [ 'result:GTS' ] ]
      [ [ 'steps:LONG' 'occ:LONG' 'post:LONG' 'pre:LONG' 'lgts:LIST' ]  [ 'lresult:LIST' ] ]
    ]
    'name' 'senx/outlier/moving_ZSCORETEST'
}
'.info' STORE

<%
  !$.info INFO
  SAVE 'context' STORE

  // Store the argument that will be passed to MAP
  [ 'gts' 'pre' 'post' 'occ' 'steps' ] STORE
  
  // Build the custom mapper
  <%
    SAVE 'inner_context' STORE

    // Make a GTS from the moving window
    LIST-> DROP [ 'cur' 'c' 'l' 't' 'lat' 'lon' 'elev' 'v' ] STORE
    $t [] [] [] $v MAKEGTS
    
    // Apply the anomaly detection test
    true 3.0 ZSCORETEST
    
    // Output one value per anomalous tick found
    0 'i' STORE
    { SWAP <% $i TOSTRING [ 3 ROLL NaN NaN NaN true ] $i 1 + 'i' STORE %> FOREACH }

    $inner_context RESTORE
  %>
  MACROMAPPER 3 MAXLONG STRICTMAPPER 'mapper_zscore_test' STORE

  // call MAP to create the boolean GTS with the flagged anomalies
  [ $gts $mapper_zscore_test $pre $post $occ $steps true ] MAP MERGE 'anomalies' RENAME
  
  $context RESTORE
%>
